/**
 * Artifact Manager
 * Manages artifact data, rendering, and interactions
 */

// Artifact Store
const ArtifactStore = {
  artifacts: new Map(),
  currentArtifact: null,

  add(artifact) {
    this.artifacts.set(artifact.id, artifact);
    this.updateArtifactCount();
  },

  get(id) {
    return this.artifacts.get(id);
  },

  getAll() {
    return Array.from(this.artifacts.values());
  },

  setCurrent(id) {
    this.currentArtifact = this.get(id);
  },

  getCurrent() {
    return this.currentArtifact;
  },

  updateArtifactCount() {
    const count = this.artifacts.size;
    const countEl = document.querySelector('.artifact-count');
    if (countEl) {
      countEl.textContent = `Artifacts (${count})`;
    }
  }
};

// Utility Functions
function escapeHTML(str) {
  const div = document.createElement('div');
  div.textContent = str;
  return div.innerHTML;
}

function formatTimestamp(isoString) {
  const date = new Date(isoString);
  return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });
}

// Rendering Functions
function renderDocumentArtifact(artifact) {
  const html = marked.parse(artifact.content);

  return `
    <div class="artifact-document">
      <div class="document-header">
        <h3 class="document-title">${escapeHTML(artifact.title)}</h3>
        <span class="document-meta">${artifact.metadata.wordCount.toLocaleString()} words</span>
      </div>
      <div class="document-content markdown-body">
        ${html}
      </div>
    </div>
  `;
}

function renderCodeArtifact(artifact) {
  const escapedCode = escapeHTML(artifact.content);

  return `
    <div class="artifact-code">
      <div class="code-header">
        <span class="code-language">${escapeHTML(artifact.language.toUpperCase())}</span>
        <span class="code-lines">${artifact.metadata.lineCount} lines</span>
      </div>
      <pre class="line-numbers"><code class="language-${artifact.language}">${escapedCode}</code></pre>
    </div>
  `;
}

function renderChartArtifact(artifact) {
  const chartId = `chart-${artifact.id}`;

  return `
    <div class="artifact-chart">
      <div class="chart-header">
        <h3 class="chart-title">${escapeHTML(artifact.title)}</h3>
        <span class="chart-type">${artifact.metadata.chartType.toUpperCase()} Chart</span>
      </div>
      <div class="chart-container">
        <canvas id="${chartId}"></canvas>
      </div>
    </div>
  `;
}

function initializeChart(artifact) {
  const chartId = `chart-${artifact.id}`;
  const canvas = document.getElementById(chartId);

  if (!canvas) {
    console.error('Canvas not found for chart:', chartId);
    return;
  }

  // Destroy existing chart if any
  if (window.currentChart) {
    window.currentChart.destroy();
    window.currentChart = null;
  }

  const ctx = canvas.getContext('2d');
  const config = JSON.parse(artifact.content);

  window.currentChart = new Chart(ctx, config);
}

// Main render dispatcher
function renderArtifactContent(artifact) {
  switch (artifact.type) {
    case 'document':
      return renderDocumentArtifact(artifact);
    case 'code':
      return renderCodeArtifact(artifact);
    case 'chart':
      return renderChartArtifact(artifact);
    default:
      return `<div class="artifact-error">Unknown artifact type: ${artifact.type}</div>`;
  }
}

// Initialize sample artifacts
function initializeSampleArtifacts() {
  // Sample Document Artifact
  ArtifactStore.add({
    id: 'artifact-001',
    type: 'document',
    title: 'Financial Analysis Report Q3 2024',
    content: `# Analisis Keuangan Q3 2024

## Ringkasan Eksekutif

Laporan ini menyajikan analisis mendalam terhadap performa keuangan Q3 2024, mencakup tren pendapatan, margin profitabilitas, dan rekomendasi strategis untuk Q4 2024.

## Temuan Utama

### 1. Pertumbuhan Pendapatan
- Q3 2024: **Rp 45.8 Miliar** (+12.3% QoQ)
- Year-over-year growth: **18.5%**
- Momentum positif dengan akselerasi dari 8.2% (Q1) ke 12.3% (Q3)

### 2. Segmentasi Pendapatan
- **Sektor A:** 58% kontribusi (Rp 26.6M) - growth 10.2%
- **Sektor B:** 28% kontribusi (Rp 12.8M) - growth 22.7% ⭐
- **Sektor C:** 14% kontribusi (Rp 6.4M) - growth 7.8%

### 3. Profitabilitas
- Gross margin: **44.1%** (↑ dari 42.3%)
- Operating margin: **18.5%** (tertinggi dalam 2 tahun)
- Net profit margin: **12.8%** (+1.4 poin)

## Rekomendasi Strategis

### Prioritas Tinggi
1. **Fokus pada Sektor B** - momentum kuat dengan growth 22.7%
2. **Efisiensi Operasional** - target saving 3-4% dari operating expenses
3. **Cash Collection** - turunkan DSO dari 52 hari ke 40-42 hari

### Prioritas Medium
1. **Revitalisasi Sektor C** - product refresh untuk meningkatkan growth
2. **Diversifikasi Revenue** - kurangi dependency Sektor A dari 58% ke 45-50%
3. **Automation Investment** - reduce operating costs jangka panjang

## Target Q4 2024
- Revenue: **Rp 50-52 Miliar** (growth 9-14%)
- Operating margin: **18-19%**
- Net profit margin: **13.5-14%**

---

*Generated by Public Data Insight Agent*`,
    timestamp: '2025-10-24T13:16:00Z',
    messageId: 'msg-003',
    metadata: {
      wordCount: 1240
    }
  });

  // Sample Code Artifact
  ArtifactStore.add({
    id: 'artifact-002',
    type: 'code',
    title: 'Python Data Analysis Script',
    language: 'python',
    content: `import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load financial data
df = pd.read_csv('financial_data_q3_2024.csv')

# Calculate quarterly growth
df['growth_rate'] = df.groupby('sector')['revenue'].pct_change() * 100

# Segment analysis
sector_summary = df.groupby('sector').agg({
    'revenue': ['sum', 'mean'],
    'growth_rate': 'mean'
}).round(2)

print("\\nSector Performance Summary:")
print(sector_summary)

# Profitability metrics
df['gross_margin'] = (df['gross_profit'] / df['revenue']) * 100
df['operating_margin'] = (df['operating_income'] / df['revenue']) * 100
df['net_margin'] = (df['net_income'] / df['revenue']) * 100

print(f"\\nQ3 2024 Margins:")
print(f"Gross Margin: {df['gross_margin'].iloc[-1]:.1f}%")
print(f"Operating Margin: {df['operating_margin'].iloc[-1]:.1f}%")
print(f"Net Margin: {df['net_margin'].iloc[-1]:.1f}%")

# Visualization
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
sector_revenue = df.groupby('sector')['revenue'].sum()
plt.pie(sector_revenue, labels=sector_revenue.index, autopct='%1.1f%%')
plt.title('Revenue Distribution by Sector')

plt.subplot(1, 2, 2)
plt.plot(df['date'], df['revenue'], marker='o')
plt.title('Revenue Trend Q3 2024')
plt.xlabel('Date')
plt.ylabel('Revenue (Millions)')
plt.xticks(rotation=45)

plt.tight_layout()
plt.savefig('financial_analysis_q3_2024.png', dpi=300, bbox_inches='tight')
print("\\nVisualization saved: financial_analysis_q3_2024.png")`,
    timestamp: '2025-10-24T13:17:30Z',
    messageId: 'msg-004',
    metadata: {
      lineCount: 45
    }
  });

  // Sample Chart Artifact
  ArtifactStore.add({
    id: 'artifact-003',
    type: 'chart',
    title: 'Revenue Growth Q3 2024',
    content: JSON.stringify({
      type: 'bar',
      data: {
        labels: ['Q1 2024', 'Q2 2024', 'Q3 2024'],
        datasets: [{
          label: 'Revenue (Billions IDR)',
          data: [37.5, 40.8, 45.8],
          backgroundColor: 'rgba(7, 42, 200, 0.7)',
          borderColor: '#072ac8',
          borderWidth: 2
        }, {
          label: 'Target',
          data: [38.0, 42.0, 44.0],
          backgroundColor: 'rgba(255, 198, 0, 0.5)',
          borderColor: '#ffc600',
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        plugins: {
          legend: {
            position: 'top',
          },
          title: {
            display: false
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Revenue (Billions IDR)'
            }
          }
        }
      }
    }),
    timestamp: '2025-10-24T13:18:00Z',
    messageId: 'msg-005',
    metadata: {
      chartType: 'bar'
    }
  });
}

// Export for use in app.js
window.ArtifactStore = ArtifactStore;
window.initializeSampleArtifacts = initializeSampleArtifacts;
window.escapeHTML = escapeHTML;
window.formatTimestamp = formatTimestamp;
window.renderArtifactContent = renderArtifactContent;
window.initializeChart = initializeChart;
